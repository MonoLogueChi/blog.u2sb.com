import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as e,o as n}from"./app-C-fKjQQ2.js";const l={};function t(p,s){return n(),i("div",null,s[0]||(s[0]=[e(`<p>这一期咱们接着来说自定义 Yilia 主题的事。</p><p>本文涉及到的修改稍微有一点点复杂，可以参考我的<a href="https://github.com/MonoLogueChi/hexo-theme-yilia" target="_blank" rel="noopener noreferrer">GitHub 仓库</a>。</p><h2 id="修改-webpack-打包路径" tabindex="-1"><a class="header-anchor" href="#修改-webpack-打包路径"><span>修改 webpack 打包路径</span></a></h2><p>为了方便管理代码，也是为了看起来干净一点，我简单修改了一下主题文档结构，把资源文件放在了<code>assets</code>目录下</p><p>修改<code>webpack.config.js</code>的<code>output</code>模块</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">__dirname</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/source/assets/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    publicPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[name].[chunkhash:6].js&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除文章中那一堆无用的代码" tabindex="-1"><a class="header-anchor" href="#删除文章中那一堆无用的代码"><span>删除文章中那一堆无用的代码</span></a></h2><p>使用 yilia 主题，每篇文章中都会出现一坨 js 代码，至今为止我也不知道是什么作用，删掉貌似也没有什么影响，每个页面能精简七八十 K 吧。</p><p>删掉<code>source-src\\scrept.ejs</code>中的</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;% for (var asset in compilation.assets) { %&gt;&lt;% if (asset.indexOf(&#39;mobile&#39;) &gt;= 0) { %&gt;&lt;%= compilation.assets[asset].source() %&gt;&lt;% } %&gt;&lt;% } %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="js-后加载" tabindex="-1"><a class="header-anchor" href="#js-后加载"><span>Js 后加载</span></a></h2><p>新建模板<code>layout\\_partial\\load-scrept.ejs</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;script&gt;function loadScript(e,t){d=document,o=d.createElement(&quot;script&quot;),s=d.getElementsByTagName(&quot;head&quot;)[0].appendChild(o),o.setAttribute(&quot;src&quot;,e),t&amp;&amp;o.addEventListener(&quot;load&quot;,function(e){t(e)}),s.parentNode.insertBefore(o,s)}&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>上面的代码是已经压缩的，直接放进页面就可以</p></blockquote><p>降新建的模板放入 head 部分，在<code>layout\\_partial\\head.ejs</code>后面加入</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;%- partial(&#39;load-script&#39;) %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>有了这段代码，我们就可以使用<code>loadScript</code>加载各种 Js 文件了。</p><p>首先是主题本身的 Js 文件，也就是<code>slider.js</code>，先分离<code>scrept.ejs</code>，创建一个<code>main.ejs</code></p><p><code>main.ejs</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;% var left = &#39;&lt;%=&#39; %&gt;</span></span>
<span class="line"><span>&lt;% var right = &#39;%&#39; %&gt;</span></span>
<span class="line"><span>&lt;% var right2 = &#39;&gt;&#39; %&gt;</span></span>
<span class="line"><span>&lt;% for (var chunk in htmlWebpackPlugin.files.chunks) { %&gt;&lt;% if (chunk === &#39;main&#39;) { %&gt;&lt;script defer src=&quot;&lt;%= left %&gt;config.root&lt;%= right %&gt;&lt;%= right2 %&gt;assets/&lt;%=htmlWebpackPlugin.files.chunks[chunk].entry %&gt;&quot;&gt;&lt;/script&gt;&lt;% } %&gt;&lt;% } %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>script.ejs</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>&lt;% var left = &#39;&lt;%=&#39; %&gt;</span></span>
<span class="line"><span>&lt;% var right = &#39;%&#39; %&gt;</span></span>
<span class="line"><span>&lt;% var right2 = &#39;&gt;&#39; %&gt;</span></span>
<span class="line"><span>(function() {</span></span>
<span class="line"><span>	&lt;% for (var asset in compilation.assets) { %&gt;&lt;% if (asset.indexOf(&#39;slider&#39;) &gt;= 0) { %&gt;&lt;% var slider = asset %&gt;&lt;% } %&gt;&lt;% } %&gt;loadScript(&quot;&lt;%= left %&gt;config.root&lt;%= right %&gt;&lt;%= right2 %&gt;assets/&lt;%= slider %&gt;&quot;)</span></span>
<span class="line"><span>})();</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>webpack.config.js</code>，修改<code>plugins</code>，增加 main 部分</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>new HtmlWebpackPlugin({</span></span>
<span class="line"><span>      inject: false,</span></span>
<span class="line"><span>      cache: false,</span></span>
<span class="line"><span>      minify: minifyHTML,</span></span>
<span class="line"><span>      template: &#39;./source-src/script.ejs&#39;,</span></span>
<span class="line"><span>      filename: &#39;../../layout/_partial/script.ejs&#39;</span></span>
<span class="line"><span>    }),</span></span>
<span class="line"><span>    new HtmlWebpackPlugin({</span></span>
<span class="line"><span>      inject: false,</span></span>
<span class="line"><span>      cache: false,</span></span>
<span class="line"><span>      minify: minifyHTML,</span></span>
<span class="line"><span>      template: &#39;./source-src/main.ejs&#39;,</span></span>
<span class="line"><span>      filename: &#39;../../layout/_partial/main.ejs&#39;</span></span>
<span class="line"><span>    })</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>layout\\_partial\\head.ejs</code>中再加入</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;%- partial(&#39;main&#39;) %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>为了优化其他 js 文件的加载速度，将不必要的 js 放在页面尾部，也就是<code>after-footer.ejs</code>，具体修改可以参考我的 GitHub 仓库</p><h2 id="优化中英文混排" tabindex="-1"><a class="header-anchor" href="#优化中英文混排"><span>优化中英文混排</span></a></h2><p>优化中英文混排，可以引入<code>pangu.js</code>，创建模板<code>layout\\_partial\\pangu.ejs</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;% if (theme.pangu){ %&gt;</span></span>
<span class="line"><span>&lt;script async&gt;</span></span>
<span class="line"><span>loadScript(&#39;https://cdn.jsdelivr.net/npm/pangu/dist/browser/pangu.min.js&#39;,function(){pangu.spacingPage();});</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span>&lt;% } %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>after-footer.ejs</code>中引入</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;%- partial(&#39;pangu&#39;) %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在主题的配置文件<code>_config.yml</code>中添加</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>#pangu.js，中英文混排优化</span></span>
<span class="line"><span>pangu: true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更优雅的方式引入-valine" tabindex="-1"><a class="header-anchor" href="#更优雅的方式引入-valine"><span>更优雅的方式引入 valine</span></a></h2><p>上一篇文章写了引入 valine，但是这样做并不是最佳方式，修改模板<code>layout\\_partial\\post\\valine.ejs</code>（需要用到上面提到的 js 后加载方式）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;div id=&quot;vcomment&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span>&lt;script async&gt;</span></span>
<span class="line"><span>    var notify = &lt;%= theme.valine.notify %&gt; == true ? true : false;</span></span>
<span class="line"><span>    var verify = &lt;%= theme.valine.verify %&gt; == true ? true : false;</span></span>
<span class="line"><span>    var visitor = &lt;%= theme.valine.visitor %&gt; == true ? true : false;</span></span>
<span class="line"><span>    loadScript(&#39;https://cdn.jsdelivr.net/npm/valine/dist/Valine.min.js&#39;,function(){</span></span>
<span class="line"><span>    loadScript(&#39;https://cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js&#39;,function(){</span></span>
<span class="line"><span>        new Valine({</span></span>
<span class="line"><span>            av: AV,</span></span>
<span class="line"><span>            el: &#39;#vcomment&#39;,</span></span>
<span class="line"><span>            notify: notify,</span></span>
<span class="line"><span>            verify: verify,</span></span>
<span class="line"><span>            app_id: &#39;&lt;%= theme.valine.appid %&gt;&#39;,</span></span>
<span class="line"><span>            app_key: &#39;&lt;%= theme.valine.appkey %&gt;&#39;,</span></span>
<span class="line"><span>            placeholder: &#39;&lt;%= theme.valine.placeholder %&gt;&#39;,</span></span>
<span class="line"><span>            avatar: &#39;&lt;%= theme.valine.avatar %&gt;&#39;,</span></span>
<span class="line"><span>            avatar_cdn: &#39;&lt;%= theme.valine.avatar_cdn %&gt;&#39;,</span></span>
<span class="line"><span>            pageSize: &lt;%= theme.valine.pageSize %&gt;,</span></span>
<span class="line"><span>            path: &#39;&lt;%- url_for(post.path) %&gt;&#39;,</span></span>
<span class="line"><span>            visitor: visitor</span></span>
<span class="line"><span>        });</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上篇文章里的主题样式，我放到了<code>comment.scss</code>中（这里为了方便管理，并没有把移动端代码放到<code>mobile.scss</code>中）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>#vcomment{margin:30px;padding:10px;background:#fff}</span></span>
<span class="line"><span>@media screen and (max-width:800px){#vcomment{margin:auto;padding:10px;background:#fff}}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更多骚操作" tabindex="-1"><a class="header-anchor" href="#更多骚操作"><span>更多骚操作</span></a></h2><p>更多骚操作请看我<a href="https://github.com/MonoLogueChi/hexo-theme-yilia" target="_blank" rel="noopener noreferrer">GitHub 仓库</a>中的修改。</p>`,41)]))}const c=a(l,[["render",t]]),o=JSON.parse('{"path":"/2019/02010.your-own-yilia-2.html","title":"自己动手修改完善yilia主题（下）","lang":"zh-CN","frontmatter":{"title":"自己动手修改完善yilia主题（下）","date":"2019-02-01T14:40:40.000Z","tag":["建站笔记"],"keywords":"Yilia Hexo主题 自定义","comments":true,"redirectFrom":["/2019/your-own-yilia-2.html"],"description":"这一期咱们接着来说自定义 Yilia 主题的事。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自己动手修改完善yilia主题（下）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-02-01T14:40:40.000Z\\",\\"dateModified\\":\\"2025-08-01T12:39:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MonoLogueChi\\",\\"url\\":\\"https://blog.u2sb.com\\"}]}"],["meta",{"property":"og:url","content":"https://blog.u2sb.com/2019/02010.your-own-yilia-2.html"}],["meta",{"property":"og:site_name","content":"叉叉白"}],["meta",{"property":"og:title","content":"自己动手修改完善yilia主题（下）"}],["meta",{"property":"og:description","content":"这一期咱们接着来说自定义 Yilia 主题的事。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-01T12:39:18.000Z"}],["meta",{"property":"article:tag","content":"建站笔记"}],["meta",{"property":"article:published_time","content":"2019-02-01T14:40:40.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-01T12:39:18.000Z"}]]},"git":{"createdTime":1754051958000,"updatedTime":1754051958000,"contributors":[{"name":"MonoLogueChi","username":"MonoLogueChi","email":"xxwhite@foxmail.com","commits":1,"url":"https://github.com/MonoLogueChi"}]},"readingTime":{"minutes":2.62,"words":785},"filePathRelative":"2019/02010.your-own-yilia-2.md","excerpt":"<p>这一期咱们接着来说自定义 Yilia 主题的事。</p>\\n","autoDesc":true}');export{c as comp,o as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-B_XiCQn_.js";const l={};function p(t,s){return i(),a("div",null,s[0]||(s[0]=[e(`<p>自己动手修改 Yilia 主题，这有什么难的，简单修修模板，改改 CSS？</p><p>自从本站建站以来，一直在用 Yilia 主题，所以对 Yilia 主题或多或少有一些自己的理解，现在想分享一下怎么修改 Ylila 主题。</p><p>这篇文章都是我自己一路踩坑踩过来的，遇到不明白的问题欢迎在评论区留言讨论（但请一定要准确说明问题，含含糊糊什么都说不清的话，我也不可能知道你遇到了什么问题），想要参考的话，请在我的<a href="https://github.com/MonoLogueChi/hexo-theme-yilia" target="_blank" rel="noopener noreferrer">GitHub</a>上查看我的修改。</p><h2 id="clone" tabindex="-1"><a class="header-anchor" href="#clone"><span>Clone</span></a></h2><p>修改的第一步，我们需要先 Fork 一份 Yilia 主题，这一步可以在<a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a>上完成。</p><p>Fork 之后 Clone 到本地，然后就可以开始了。</p><h2 id="从源码构建-yilia" tabindex="-1"><a class="header-anchor" href="#从源码构建-yilia"><span>从源码构建 Yilia</span></a></h2><p>Yilia 需要使用 webpack 构建生成，所以在此之前，需要有一定的 webpack 基础，如果没有也不要紧，马上百度去了解一下还来得及。</p><p>从源码构建，可以参考 <a href="https://github.com/litten/hexo-theme-yilia/wiki/Yilia%E6%BA%90%E7%A0%81%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E5%8F%8A%E6%9E%84%E5%BB%BA%E9%A1%BB%E7%9F%A5" target="_blank" rel="noopener noreferrer">Yilia 源码目录结构及构建须知</a></p><p>首先需要搞定开发环境，安装好<code>node</code>和<code>npm</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但是直接这样做你可能会遇到非常大的一个坑，因为作者的开发环境已经很老了，webpack 这一套东西的更新速度实在是太快了，而且淘汰也非常的快，即使你跟着百度一步一步搞完了，后面打包的时候也会遇到很多的坑，所以我建议你直接从我的<a href="https://github.com/MonoLogueChi/hexo-theme-yilia/tree/4def8e882d4ae84930021a11dd3ab9dee3cb92c7" target="_blank" rel="noopener noreferrer">仓库</a>里拷贝<code>package.json</code> <code>postcss.config.js</code> <code>webpack.config.js</code>三个文件到你的项目里，然后再执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果长时间卡死，建议使用淘宝源</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install --registry=https://registry.npm.taobao.org</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>搞好之后，尝试构建一下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm run dist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://s2.ax1x.com/2019/01/26/knhmUP.png" alt="从源码构建" tabindex="0" loading="lazy"><figcaption>从源码构建</figcaption></figure><h2 id="目录解析" tabindex="-1"><a class="header-anchor" href="#目录解析"><span>目录解析</span></a></h2><p>前面讲了从源码构建，勉勉强强算是把开发环境搞好了，咱们接着来研究一下 Yilia 主题</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>./</span></span>
<span class="line"><span>|-- languages</span></span>
<span class="line"><span>|-- layout</span></span>
<span class="line"><span>|                   \`-- _partial</span></span>
<span class="line"><span>|                   \`-- post</span></span>
<span class="line"><span>|-- source</span></span>
<span class="line"><span>|   |-- fonts</span></span>
<span class="line"><span>|   \`-- img</span></span>
<span class="line"><span>\`-- source-src</span></span>
<span class="line"><span>    |-- css</span></span>
<span class="line"><span>    |   |           \`-- core</span></span>
<span class="line"><span>    |   |           \`-- fonts</span></span>
<span class="line"><span>    |               \`-- img</span></span>
<span class="line"><span>    \`-- js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先看几个文件夹，</p><ul><li><code>language</code>文件夹是语言文件，一般不需要修改，除非你增加了什么新布局，可能需要适配多语言；</li><li><code>layout</code>模板文件夹，修改和增加新功能，大部分都需要改动模板；</li><li><code>source</code>打包后的资源就放在这里；</li><li><code>source-src</code>js 和 css 源码文件都在这里，需要修改 js 和 css 就要从这里修改。</li></ul><h2 id="简单修改" tabindex="-1"><a class="header-anchor" href="#简单修改"><span>简单修改</span></a></h2><p>我们举两个简单的例子，来说明一下怎么从源码修改</p><h3 id="取消统计代码" tabindex="-1"><a class="header-anchor" href="#取消统计代码"><span>取消统计代码</span></a></h3><p>用过 Yilia 主题的都知道，一段统计代码总是拉低你的加载速度，不得已，需要自己去注释掉，我们现在说一下怎么从源码上删掉这段统计代码，首先看目录结构</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.\\source-src\\js\\</span></span>
<span class="line"><span>|-- Q.js</span></span>
<span class="line"><span>|-- anm.js</span></span>
<span class="line"><span>|-- aside.js</span></span>
<span class="line"><span>|-- browser.js</span></span>
<span class="line"><span>|-- fix.js</span></span>
<span class="line"><span>|-- main.js</span></span>
<span class="line"><span>|-- mobile.js</span></span>
<span class="line"><span>|-- report.js</span></span>
<span class="line"><span>|-- share.js</span></span>
<span class="line"><span>|-- slider.js</span></span>
<span class="line"><span>|-- util.js</span></span>
<span class="line"><span>\`-- viewer.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一眼扫过去，再简单分析一下，就知道，统计上报的代码写在了<code>report.js</code>里</p><p>修改<code>main.js</code>，将其注释掉，然后使用 webpack 打包<code>npm run dist</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 样式</span></span>
<span class="line"><span>import &#39;../css/main.scss&#39;</span></span>
<span class="line"><span>// 上报</span></span>
<span class="line"><span>//import &#39;./report&#39;</span></span>
<span class="line"><span>// 图片查看器</span></span>
<span class="line"><span>import Viewer from &#39;./viewer&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成，新生成的 main.xxxxxx.js 里已经没有了统计代码了。</p><h3 id="增加-valine-评论" tabindex="-1"><a class="header-anchor" href="#增加-valine-评论"><span>增加 Valine 评论</span></a></h3><p>目前我的博客引入 Valine 评论的方式稍有复制，先来介绍一下最简单的引入方式</p><p>修改<code>layout/_partial/article.ejs</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  &lt;% if (theme.valine &amp;&amp; theme.valine.appid &amp;&amp; theme.valine.appkey){ %&gt;</span></span>
<span class="line"><span>    &lt;section id=&quot;comments&quot; class=&quot;comments&quot;&gt;</span></span>
<span class="line"><span>      &lt;style&gt;</span></span>
<span class="line"><span>        .comments{margin:30px;padding:10px;background:#fff}</span></span>
<span class="line"><span>        @media screen and (max-width:800px){.comments{margin:auto;padding:10px;background:#fff}}</span></span>
<span class="line"><span>      &lt;/style&gt;</span></span>
<span class="line"><span>      &lt;%- partial(&#39;post/valine&#39;, {</span></span>
<span class="line"><span>        key: post.slug,</span></span>
<span class="line"><span>        title: post.title,</span></span>
<span class="line"><span>        url: config.url+url_for(post.path)</span></span>
<span class="line"><span>        }) %&gt;</span></span>
<span class="line"><span>    &lt;/section&gt;</span></span>
<span class="line"><span>  &lt;% } %&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加<code>layout/_partial/post/valine.ejs</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;div id=&quot;vcomment&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"><span>&lt;script src=&quot;//cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span>&lt;script src=&quot;//cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span>&lt;script src=&#39;//cdn.jsdelivr.net/npm/valine/dist/Valine.min.js&#39;&gt;&lt;/script&gt;</span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>   var notify = &#39;&lt;%= theme.valine.notify %&gt;&#39; == true ? true : false;</span></span>
<span class="line"><span>   var verify = &#39;&lt;%= theme.valine.verify %&gt;&#39; == true ? true : false;</span></span>
<span class="line"><span>   new Valine({</span></span>
<span class="line"><span>            av: AV,</span></span>
<span class="line"><span>            el: &#39;#vcomment&#39;,</span></span>
<span class="line"><span>            notify: notify,</span></span>
<span class="line"><span>            verify: verify,</span></span>
<span class="line"><span>            app_id: &quot;&lt;%= theme.valine.appid %&gt;&quot;,</span></span>
<span class="line"><span>            app_key: &quot;&lt;%= theme.valine.appkey %&gt;&quot;,</span></span>
<span class="line"><span>            placeholder: &quot;&lt;%= theme.valine.placeholder %&gt;&quot;,</span></span>
<span class="line"><span>            avatar: &quot;&lt;%= theme.valine.avatar %&gt;&quot;,</span></span>
<span class="line"><span>            avatar_cdn: &quot;&lt;%= theme.valine.avatar_cdn %&gt;&quot;,</span></span>
<span class="line"><span>            pageSize: &lt;%= theme.valine.pageSize %&gt;</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简单的部分就讲完了，剩下的内容稍微有点复制，而且属于魔改系类，算是个人的一些见解，所以就分到了另一节里，下篇文章会稍微讲解一下 webpack 的配置，还有 js 后加载和 DOM 阻塞的一下问题。</p>`,39)]))}const c=n(l,[["render",p]]),o=JSON.parse('{"path":"/2019/01260.your-own-yilia-1.html","title":"自己动手修改完善yilia主题（上）","lang":"zh-CN","frontmatter":{"title":"自己动手修改完善yilia主题（上）","date":"2019-01-26T13:49:23.000Z","tag":["建站笔记"],"keywords":"Yilia Hexo主题 自定义","comments":true,"redirectFrom":["/2019/your-own-yilia-1.html"],"description":"自己动手修改 Yilia 主题，这有什么难的，简单修修模板，改改 CSS？","head":[["meta",{"property":"og:url","content":"https://blog.u2sb.com/2019/01260.your-own-yilia-1.html"}],["meta",{"property":"og:site_name","content":"叉叉白"}],["meta",{"property":"og:title","content":"自己动手修改完善yilia主题（上）"}],["meta",{"property":"og:description","content":"自己动手修改 Yilia 主题，这有什么难的，简单修修模板，改改 CSS？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.ax1x.com/2019/01/26/knhmUP.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-06T07:21:58.000Z"}],["meta",{"property":"article:tag","content":"建站笔记"}],["meta",{"property":"article:published_time","content":"2019-01-26T13:49:23.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-06T07:21:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自己动手修改完善yilia主题（上）\\",\\"image\\":[\\"https://s2.ax1x.com/2019/01/26/knhmUP.png\\"],\\"datePublished\\":\\"2019-01-26T13:49:23.000Z\\",\\"dateModified\\":\\"2025-04-06T07:21:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MonoLogueChi\\",\\"url\\":\\"https://blog.u2sb.com\\"}]}"]]},"git":{"createdTime":1743924118000,"updatedTime":1743924118000,"contributors":[{"name":"MonoLogueChi","username":"MonoLogueChi","email":"xxwhite@foxmail.com","commits":1,"url":"https://github.com/MonoLogueChi"}]},"readingTime":{"minutes":3.73,"words":1120},"filePathRelative":"2019/01260.your-own-yilia-1.md","localizedDate":"2019年1月26日","excerpt":"<p>自己动手修改 Yilia 主题，这有什么难的，简单修修模板，改改 CSS？</p>\\n","autoDesc":true}');export{c as comp,o as data};

import{_ as s,a}from"./Snipaste_2020-05-16_18-17-50-DAtDBytE.js";import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as l,o as t}from"./app-CnYccAH2.js";const p="/assets/sketch1589621851548-BARgFHfD.png",h="/assets/Snipaste_2020-05-16_18-32-22-lFT2aTQE.png",k="/assets/Snipaste_2020-05-16_18-46-46-dvxdTcSY.png",d={};function r(c,i){return t(),e("div",null,i[0]||(i[0]=[l('<p>使用 ci 自动化构建博客，只需要写文章就可以了。</p><p>丝毫没有技术含量的文章，只是简单介绍一下我的博客是怎么使用自动化构建的。</p><p>这篇文章中会提到，Hexo 优雅的方式更新主题，Hexo 使用 ci 自动化构建，Hexo 部署到 GitHub Page，Hexo 部署到又拍云（u-file 方法相同）。</p><p>一张简图，简单介绍一下我博客现在的情况。</p><figure><img src="'+p+`" alt="博客情况" tabindex="0" loading="lazy"><figcaption>博客情况</figcaption></figure><p>写完文章，往 GitHub 上一推，剩下的就全是自动化的了。</p><p>下面简单介绍一下细节</p><h2 id="主题子模块化" tabindex="-1"><a class="header-anchor" href="#主题子模块化"><span>主题子模块化</span></a></h2><p>使用子模块更新 Hexo 主题，应该算是一种优雅的主题更新方式了，而且我的主题目前是我自己维护的，使用子模块就更方便了。</p><p>在 theme 目录下执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git submodule add https://github.com/MonoLogueChi/hexo-theme-yilia</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>怎么更新子模块，可以自行百度。</p><p>主题变成子模块之后，更新是方便了，但是配置文件怎么搞定呢？支持 data 的主题目前来说不多，一种更普遍的方式是把配置文件写在 Hexo 的 <code>_config.yml</code> 文件里。</p><p>具体方式是，添加一项 <code>theme_config:</code> 这里面的配置会覆盖主题的，注意，只会覆盖主题相同项的，所以这里面要完整复制主题的配置文件，然后修改成自己的。</p><p>示例：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Hexo Configuration</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## Docs: https://hexo.io/docs/configuration.html</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## Source: https://github.com/hexojs/hexo/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Site</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;叉叉白&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">subtitle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;叉叉白，听我跟你瞎白话&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;一个小白搞机的记事本&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">叉叉白</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 主题</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">theme_config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # Header</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  menu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    主页</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    搞机</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/tags/搞机/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    笔记</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/tags/建站笔记/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    时光</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/tags/timeline/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    留言</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/MessageBoard/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    关于</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/aboutme/&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  ## ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-azure-pipelines" tabindex="-1"><a class="header-anchor" href="#使用-azure-pipelines"><span>使用 Azure Pipelines</span></a></h2><p>可以免费使用的 ci 有好多，我以自己常用的 Azure Pipelines 为例简单说明一下，其他 ci 可以参考相关文档。</p><p>Azure Pipelines 网址是 <a href="https://dev.azure.com/" target="_blank" rel="noopener noreferrer">https://dev.azure.com/</a> ，以下全部参考 <a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/get-started/pipelines-sign-up?view=azure-devops" target="_blank" rel="noopener noreferrer">Azure Pipelines 文档</a> ，如果有不理解的，请直接阅读文档。</p><p>可以使用 GitHub 登录，然后创建一个 project，在左侧点击 Pipelines，然后点击 new Pipeline，选择 GitHub，选择自己的博客仓库，然后会跳转到 GitHub 让你去授权，这里什么都不需要改，直接翻到最下面去点 <code>Approve and install</code>，然后就会再次跳转回 Azure Pipelines，耐心等待就可以，再后面模板随便选一个就可以，选什么无所谓。</p><p>然后修改模板，可以直接复制我的，其中部署部分会在下面一节讲解，配置我放在文章最后了。</p><h2 id="自动化部署到又拍云" tabindex="-1"><a class="header-anchor" href="#自动化部署到又拍云"><span>自动化部署到又拍云</span></a></h2><p>自动化部署到又拍云和 u-file 配置是一模一样的，又拍云创建储存空间和绑定域名部分就不讲了，直接说部署。</p><p>在 <code>存储管理</code> 的最后面找到 <code>操作员授权</code> 新建一个操作员</p><figure><img src="`+s+'" alt="操作员授权" tabindex="0" loading="lazy"><figcaption>操作员授权</figcaption></figure><figure><img src="'+a+'" alt="操作员授权" tabindex="0" loading="lazy"><figcaption>操作员授权</figcaption></figure><p>记下创建的操作员名称和密码，等下要用。下面这个表格是 u-file 和又拍云的联系，只需要替换相应的变量，就可以把文件部署到 u-file 上</p><table><thead><tr><th>又拍云</th><th>u-file</th></tr></thead><tbody><tr><td>服务名称</td><td>存储器名称</td></tr><tr><td>操作员</td><td>用户名</td></tr><tr><td>密码</td><td>密码</td></tr></tbody></table><p>回到 Azure Pipelines，在左侧的 <code>Library</code> 选项卡中，新建一个变量组（variable group）。</p><p>看下图，记住要填写哪些变量，记得添加完把后面的锁给勾上，表示加密变量。</p><figure><img src="'+h+`" alt="又拍云变量组" tabindex="0" loading="lazy"><figcaption>又拍云变量组</figcaption></figure><p>使用变量组只需要在配置文件中写</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">variables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">upyun</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用其中的变量，可以使用</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$(BUCKET)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>部署到又拍云（u-file）需要使用 <a href="https://github.com/upyun/upx" target="_blank" rel="noopener noreferrer">upx</a> 工具，具体怎么用，可以看本文最后的配置文件示例。</p><h2 id="部署到-github-page" tabindex="-1"><a class="header-anchor" href="#部署到-github-page"><span>部署到 Github Page</span></a></h2><p>部署到 gh-page 需要使用 token，在 github，点击右上角的头像，选择 setting 选项，找到 Developer settings， 在 Personal access tokens 里生成一个新 token，一般来说勾上 <code>repo</code>里面的权限就足够了。</p><p>记住这个 token，只会出现一次，后面要用。</p><p>回到 Azure Pipelines，在左侧的 <code>Library</code> 选项卡中，新建一个变量组（variable group）。</p><p>看下图，记住要填写哪些变量，记得添加完把后面的锁给勾上，表示加密变量。</p><figure><img src="`+k+`" alt="GitHub变量组" tabindex="0" loading="lazy"><figcaption>GitHub变量组</figcaption></figure><p>使用变量组只需要在配置文件中写</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">variables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">github</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>详细的配置文件写在了文章最后。</p><p>记得在博客的 <code>source</code> 目录下创建一个 <code>CNAME</code> 文件，写上你的域名，测试 ci 没有问题只会，在仓库的设置里面开启 github page 功能，选择分支 <code>gh-page</code>。</p><h2 id="azure-pipelines-yml" tabindex="-1"><a class="header-anchor" href="#azure-pipelines-yml"><span>azure-pipelines.yml</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">trigger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  vmImage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ubuntu-latest&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">variables</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">github</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">upyun</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">checkout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">self</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    fetchDepth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    submodules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">UseNode@1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    inputs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;12.x&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Npm@1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    inputs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;custom&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      customCommand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;install hexo-cli -g&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Npm@1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    inputs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;custom&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      customCommand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;install --pure-lockfile&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">task</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">CmdLine@2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    inputs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">|</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        hexo g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        #又拍云同步</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        wget -O upx http://collection.b0.upaiyun.com/softwares/upx/upx-linux-amd64-v0.2.6</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        chmod +x upx</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        ./upx login $(BUCKET) $(OPERATOR) $(OPERATOR_PASSWORD)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        ./upx sync public/ / --delete</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        ./upx logout</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        #部署到GitHub Page</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        cd public</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        touch .nojekyll</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        git config --global user.email &quot;$(EMAIL)&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        git config --global user.name &quot;$(USER)&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        git init</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        git add .</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        git commit -m update</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        git push --force --quiet https://$(TOKEN)@github.com/MonoLogueChi/blog.xxwhite.com.git master:gh-pages</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48)]))}const m=n(d,[["render",r]]),y=JSON.parse('{"path":"/2020/05160.blog-ci.html","title":"Hexo博客自动化部署","lang":"zh-CN","frontmatter":{"title":"Hexo博客自动化部署","date":"2020-05-16T14:58:35.000Z","tag":["建站笔记"],"keywords":"ci 自动化部署 Hexo 又拍云 GitHubPage u-file","comments":true,"redirectFrom":["/2020/blog-ci.html"],"description":"使用 ci 自动化构建博客，只需要写文章就可以了。","head":[["meta",{"property":"og:url","content":"https://blog.u2sb.com/2020/05160.blog-ci.html"}],["meta",{"property":"og:site_name","content":"叉叉白"}],["meta",{"property":"og:title","content":"Hexo博客自动化部署"}],["meta",{"property":"og:description","content":"使用 ci 自动化构建博客，只需要写文章就可以了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-06T05:10:35.000Z"}],["meta",{"property":"article:tag","content":"建站笔记"}],["meta",{"property":"article:published_time","content":"2020-05-16T14:58:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-06T05:10:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hexo博客自动化部署\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-16T14:58:35.000Z\\",\\"dateModified\\":\\"2025-04-06T05:10:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MonoLogueChi\\",\\"url\\":\\"https://blog.u2sb.com\\"}]}"]]},"git":{"createdTime":1743916235000,"updatedTime":1743916235000,"contributors":[{"name":"MonoLogueChi","username":"MonoLogueChi","email":"xxwhite@foxmail.com","commits":1,"url":"https://github.com/MonoLogueChi"}]},"readingTime":{"minutes":4.5,"words":1351},"filePathRelative":"2020/05160.blog-ci.md","localizedDate":"2020年5月16日","excerpt":"<p>使用 ci 自动化构建博客，只需要写文章就可以了。</p>\\n","autoDesc":true}');export{m as comp,y as data};

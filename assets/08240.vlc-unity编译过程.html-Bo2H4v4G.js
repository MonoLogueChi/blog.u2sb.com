import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-CnYccAH2.js";const t={};function l(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<p>最近一个项目需要在 Unity 中播放 RTSP 视频流，打算使用 vlc-unity，简单记录一下自行编译过程。</p><blockquote><p>这篇文章在未来的某个时刻，肯定会过期的，看的时候要注意一下。</p></blockquote><blockquote><p>看文章要思考，不要看到命令就复制，要学会举一反三，自行思考。</p></blockquote><blockquote><p>本篇文章基本是按照 <code>vlc-unity</code> 的 <a href="https://github.com/videolan/vlc-unity/blob/master/.gitlab-ci.yml" target="_blank" rel="noopener noreferrer">.gitlab-ci.yml</a> 文件写的，所以请以 <code>.gitlab-ci.yml</code> 为准，阅读本文前，请阅读 <code>.gitlab-ci.yml</code>，并注意后续更新。本文以 win64 平台为例，其他平台请自行思考。</p></blockquote><h2 id="基础环境" tabindex="-1"><a class="header-anchor" href="#基础环境"><span>基础环境</span></a></h2><p>准备 docker 环境，这里不再赘述。</p><p>启动镜像</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --entrypoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> registry.videolan.org/vlc-debian-llvm-msvcrt:20240617101054</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后克隆代码</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/videolan/vlc-unity.git</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vlc-unity</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/videolan/vlc.git</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vlc</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ../patches/disable-activex.patch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译-vlc" tabindex="-1"><a class="header-anchor" href="#编译-vlc"><span>编译 VLC</span></a></h2><p>编译 vlc</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">extras/package/win32/build.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -z</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x86_64</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nope</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> l</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> win64</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package-win-strip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vlc-4.0.0-dev/lua/http</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ../../</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后把 <code>vlv/win64/vlc-4.0.0-dev/</code> 目录拷贝下来备用。</p><h2 id="编译-vlc-unity" tabindex="-1"><a class="header-anchor" href="#编译-vlc-unity"><span>编译 VLC-UNITY</span></a></h2><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PKG_CONFIG_PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./vlc/win64/_win32/lib/pkgconfig</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> meson</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build_windows</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cross-file=cross/windows-x86_64.txt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Dwatermark=false</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --buildtype</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> release</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ninja</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build_windows</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build_windows/PluginSource/libVLCUnityPlugin-1.dll</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> VLCUnityPlugin.dll</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后把 <code>VLCUnityPlugin.dll</code> 拷贝下来备用。</p><h2 id="编译-libvlcsharp" tabindex="-1"><a class="header-anchor" href="#编译-libvlcsharp"><span>编译 LIBVLCSHARP</span></a></h2><p>这一部分在 windows 环境上搞就行，当然 Linux 中也可以，这里还是用 Docker</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --user</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --entrypoint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mcr.microsoft.com/dotnet/sdk:8.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://code.videolan.org/videolan/LibVLCSharp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lvs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lvs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src/LibVLCSharp/LibVLCSharp.csproj</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /p:UNITY=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Release</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后把 <code>lvs/src/LibVLCSharp/bin/Release/netstandard2.0/</code> 目录拷贝下来备用。</p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>至此，所有需要的文件就全部编译完成了，克隆 <code>vlc-unity</code> 仓库，将前面编译的文件放入工程中，测试功能是否正常。</p>`,25)]))}const r=s(t,[["render",l]]),d=JSON.parse('{"path":"/2024/08240.vlc-unity%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B.html","title":"vlc-unity编译过程","lang":"zh-CN","frontmatter":{"title":"vlc-unity编译过程","date":"2024-08-24T19:42:00.000Z","keywords":"unity vlc vlc-unity compile 编译","tag":["Unity"],"description":"最近一个项目需要在 Unity 中播放 RTSP 视频流，打算使用 vlc-unity，简单记录一下自行编译过程。","head":[["meta",{"property":"og:url","content":"https://blog.u2sb.com/2024/08240.vlc-unity%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"叉叉白"}],["meta",{"property":"og:title","content":"vlc-unity编译过程"}],["meta",{"property":"og:description","content":"最近一个项目需要在 Unity 中播放 RTSP 视频流，打算使用 vlc-unity，简单记录一下自行编译过程。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-06T05:10:35.000Z"}],["meta",{"property":"article:tag","content":"Unity"}],["meta",{"property":"article:published_time","content":"2024-08-24T19:42:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-06T05:10:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vlc-unity编译过程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-24T19:42:00.000Z\\",\\"dateModified\\":\\"2025-04-06T05:10:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MonoLogueChi\\",\\"url\\":\\"https://blog.u2sb.com\\"}]}"]]},"git":{"createdTime":1743916235000,"updatedTime":1743916235000,"contributors":[{"name":"MonoLogueChi","username":"MonoLogueChi","email":"xxwhite@foxmail.com","commits":1,"url":"https://github.com/MonoLogueChi"}]},"readingTime":{"minutes":1.44,"words":433},"filePathRelative":"2024/08240.vlc-unity编译过程.md","localizedDate":"2024年8月25日","excerpt":"<p>最近一个项目需要在 Unity 中播放 RTSP 视频流，打算使用 vlc-unity，简单记录一下自行编译过程。</p>\\n","autoDesc":true}');export{r as comp,d as data};
